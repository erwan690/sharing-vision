definitions:
  payload.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  payload.PostRequest:
    properties:
      category:
        minLength: 3
        type: string
      content:
        minLength: 200
        type: string
      status:
        enum:
        - Publish
        - Draft
        - Trash
        type: string
      title:
        minLength: 20
        type: string
    required:
    - category
    - content
    - status
    - title
    type: object
  payload.PostResponse:
    properties:
      category:
        type: string
      content:
        type: string
      created_date:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_date:
        type: string
    type: object
  payload.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /article:
    get:
      consumes:
      - application/json
      description: Get all posts
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Title
        in: query
        name: title
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - description: Category
        in: query
        name: category
        type: string
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.SuccessResponse'
            - properties:
                Data:
                  items:
                    $ref: '#/definitions/payload.PostResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/payload.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/payload.SuccessResponse'
            - properties:
                Data:
                  $ref: '#/definitions/payload.PostResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
      summary: Create a new post
      tags:
      - posts
  /article/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.SuccessResponse'
            - properties:
                Data:
                  $ref: '#/definitions/payload.PostResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/payload.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.SuccessResponse'
            - properties:
                Data:
                  $ref: '#/definitions/payload.PostResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/payload.ErrorResponse'
      summary: Update a post
      tags:
      - posts
swagger: "2.0"
